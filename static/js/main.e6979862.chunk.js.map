{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/TodoForm.js","App.js","index.js"],"names":["Todo","todo","todoDelete","todoToogleCompleted","setTodoEdit","className","title","onClick","id","completed","description","TodoList","todos","length","map","initialFormValues","TodoForm","todoAdd","todoEdit","todoUpdate","useState","formValues","setFormValues","error","setError","successMessage","setSuccessMessage","useEffect","handleInputChange","e","changedFormValues","target","name","value","onSubmit","preventDefault","trim","setTimeout","type","placeholder","onChange","initialTodos","localTodos","JSON","parse","localStorage","getItem","App","setTodos","setItem","stringify","todoId","changedTodos","filter","Date","now","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e6979862.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Todo = ({ todo, todoDelete, todoToogleCompleted, setTodoEdit }) => {\r\n\r\n    return (\r\n        <div className=\"card mt-2\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title text-right\">\r\n                    {todo.title}\r\n                    <button\r\n                        onClick={() => todoToogleCompleted(todo.id)}\r\n                        className={`btn btn-sm ${todo.completed ? 'btn-outline-success' : 'btn-success'} ml-2`}\r\n                    >\r\n                        {todo.completed ? 'Terminado' : 'Terminar'}\r\n                    </button>\r\n                </h3>\r\n                <p className=\"card-text text-right\">\r\n                    {todo.description}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <button\r\n                        onClick={() => setTodoEdit(todo)}\r\n                        className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                    >\r\n                        Editar\r\n                    </button>\r\n                    <button\r\n                        onClick={() => todoDelete(todo.id)}\r\n                        className=\"btn btn-sm btn-outline-danger\"\r\n                    >\r\n                        Eliminar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nconst TodoList = ({ todos, todoDelete, todoToogleCompleted, setTodoEdit }) => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-right display-4\">Tareas Agregadas</h2>\r\n\r\n            {\r\n                todos.length === 0\r\n                    ? (\r\n                        <div className=\"alert alert-primary\">\r\n                            No hay tareas. Por favor agrega una {\":)\"}\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        todos.map(todo => (\r\n                            <Todo\r\n                                todo={todo}\r\n                                key={todo.id}\r\n                                todoDelete={todoDelete}\r\n                                todoToogleCompleted={todoToogleCompleted}\r\n                                setTodoEdit={setTodoEdit}\r\n                            />\r\n                        ))\r\n                    )\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\n\r\nconst initialFormValues = {\r\n    title: '',\r\n    description: ''\r\n}\r\n\r\nconst TodoForm = ({ todoAdd, todoEdit, todoUpdate, setTodoEdit }) => {\r\n\r\n    const [formValues, setFormValues] = useState(initialFormValues)\r\n    const { title, description } = formValues;\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if (todoEdit) {\r\n            setFormValues(todoEdit);\r\n        }\r\n\r\n        else {\r\n            setFormValues(initialFormValues);\r\n        }\r\n\r\n    }, [todoEdit])\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        const changedFormValues = {\r\n            ...formValues,\r\n            [e.target.name]: e.target.value\r\n        }\r\n\r\n        setFormValues(changedFormValues);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (title.trim() === '') {\r\n            setError('Debes indicar un título');\r\n            return;\r\n        }\r\n\r\n        if (description.trim() === '') {\r\n            setError('Debes indicar una descripción');\r\n            return;\r\n        }\r\n\r\n\r\n        if (todoEdit) {\r\n            todoUpdate(formValues);\r\n            setSuccessMessage('Actualizado con éxito');\r\n        }\r\n\r\n        else {\r\n            todoAdd(formValues);\r\n            setSuccessMessage('Agregado con éxito');\r\n            setFormValues(initialFormValues);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setSuccessMessage(null);\r\n        }, 2000);\r\n\r\n        setError(null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center display-5\">{todoEdit ? 'Editar tarea' : 'Nueva tarea'}</h2>\r\n\r\n\r\n            {\r\n                todoEdit &&\r\n                <button\r\n                    onClick={() => setTodoEdit(null)}\r\n                    className=\"btn btn-sm btn-warning mb-2\"\r\n                > Cancelar edición\r\n                </button>\r\n            }\r\n\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Título\"\r\n                    className=\"form-control\"\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"Descripción\"\r\n                    className=\"form-control mt-2\"\r\n                    value={description}\r\n                    name=\"description\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mt-2\"\r\n                >{todoEdit ? 'Actualizar tarea' : 'Agregar tarea'}\r\n                </button>\r\n\r\n            </form>\r\n\r\n            {\r\n                error &&\r\n                (\r\n                    <div className=\"alert alert-danger mt-2\">\r\n                        { error}\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n            {\r\n                successMessage && (\r\n                    <div className=\"alert alert-success mt-2\">\r\n                        { successMessage}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState, useEffect } from 'react';\r\nimport TodoList from './components/TodoList';\r\nimport TodoForm from './components/TodoForm';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        title: 'Titulo #1',\r\n        description: 'Desc de tarea #1',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Titulo #2',\r\n        description: 'Desc de tarea #2',\r\n        completed: true\r\n    }\r\n];\r\n\r\nconst localTodos = JSON.parse(localStorage.getItem('todos'));\r\n\r\nconst App = () => {\r\n\r\n    const [todos, setTodos] = useState(localTodos || initialTodos);\r\n    const [todoEdit, setTodoEdit] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n\r\n    }, [todos]);\r\n\r\n    const todoDelete = (todoId) => {\r\n\r\n        if (todoEdit && todoId === todoEdit.id) {\r\n            setTodoEdit(null);\r\n        }\r\n\r\n        const changedTodos = todos.filter(todo => todo.id !== todoId);\r\n        setTodos(changedTodos);\r\n    }\r\n\r\n    const todoToogleCompleted = (todoId) => {\r\n\r\n        // const changedTodos = todos.map(todo => {\r\n\r\n        //     const todoEdit = {\r\n        //         ...todo,\r\n        //         completed: !todo.completed\r\n        //     }\r\n\r\n        //     if(todo.id === todoId) {\r\n        //         return todoEdit\r\n        //     }\r\n\r\n        //     else {\r\n        //         return todo\r\n        //     }\r\n\r\n        // })\r\n\r\n        // const changedTodos = todos.map(todo => (\r\n        //     todo.id === todoId \r\n        //     ? {...todo, completed: !todo.completed}\r\n        //     : todo\r\n        // ));\r\n\r\n        const changedTodos = todos.map(todo => todo.id === todoId ? { ...todo, completed: !todo.completed } : todo);\r\n\r\n        setTodos(changedTodos);\r\n    }\r\n\r\n    const todoAdd = (todo) => {\r\n\r\n        const newTodo = {\r\n            id: Date.now(),\r\n            ...todo,\r\n            completed: false\r\n\r\n        }\r\n\r\n        const changedTodos = [\r\n            newTodo,\r\n            ...todos,\r\n        ]\r\n\r\n        setTodos(changedTodos);\r\n    }\r\n\r\n    const todoUpdate = (todoEdit) => {\r\n\r\n        const changedTodos = todos.map(todo => (\r\n            todo.id === todoEdit.id\r\n                ? todoEdit\r\n                : todo\r\n        ))\r\n\r\n        setTodos(changedTodos);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <TodoList\r\n                        todos={todos}\r\n                        todoDelete={todoDelete}\r\n                        todoToogleCompleted={todoToogleCompleted}\r\n                        setTodoEdit={setTodoEdit}\r\n                    />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <TodoForm\r\n                        todoEdit={todoEdit}\r\n                        todoAdd={todoAdd}\r\n                        todoUpdate={todoUpdate}\r\n                        setTodoEdit={setTodoEdit}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n     <App />,\r\n     document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}